warning = FALSE
)
knitr::opts_chunk$set(fig.width=6, fig.height=4, message = FALSE)
a<- matrix(c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0),nrow=10, ncol=10)
a
library(network)
net <- as.network(a, loops = TRUE)
net
library(NetworkExtinction)
data("net")
Mostconnected(Network = net)
data("net")
history <- Mostconnected(Network = net)
ExtinctionPlot(History = history, Variable = "AccSecExt")
data("net")
ExtinctionOrder(Network = net, Order = c(2,4,7))
data("net")
knitr::kable(ExtinctionOrder(Network = net, Order = c(2,4,7))$DF, caption = "Table 2: The resulting dataframe of the ExtinctionOrder function")
data("net")
ExtinctionOrder(Network = net, Order = c(2,4,7))$Graph
data(net)
RandomExtinctions(Network= net, nsim= 50)
data(net)
set.seed(707)
RandomExtinctions(Network= net, nsim= 50)
data(net)
set.seed(707)
RandomExtinctions(Network= net, nsim= 50)
data(net)
set.seed(707)
RandomExtinctions(Network= net, nsim= 100)
?.Deprecated()
?lifecycle::deprecate_soft()
?raster::getData
library(NetworkExtinction)
library(NetworkExtinction)
library(NetworkExtinction)
library(NetworkExtinction)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
warning = FALSE
)
knitr::opts_chunk$set(fig.width=6, fig.height=4, message = FALSE)
data(net)
set.seed(707)
RandomExtinctions(Network= net, nsim= 100)
data(net)
set.seed(707)
Test <- RandomExtinctions(Network= net, nsim= 100)
knitr::kable(Test$sims, caption = "Table 3: The resulting dataframe of the RandomExtinctions function")
data(net)
set.seed(123)
Test$graph
data(net)
set.seed(707)
Test$graph
data("net")
History <- ExtinctionOrder(Network = net, Order = c(1,2,3,4,5,6,7,8,9,10))
NullHyp <- RandomExtinctions(Network = net, nsim = 100)
Comparison <- CompareExtinctions(Nullmodel = NullHyp, Hypothesis = History)
Comparison$graph
data(net)
history <- Mostconnected(Network = net)
ExtinctionPlot(History = history)
ExtinctionPlot(History = history, Variable = "Link_density")
data("chilean_intertidal")
DegreeDistribution(chilean_intertidal)
library(NetworkExtinction)
?SimulateExtinctions
data("net")
SimulateExtinctions(Network = net, Method = "Mostconnected")
data("chilean_intertidal")
DegreeDistribution(chilean_intertidal)
NetworkExtinction::DergreeDistribution(chilean_intertidal)
library(NetworkExtinction)
DegreeDistribution(chilean_intertidal)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
warning = FALSE
)
knitr::opts_chunk$set(fig.width=6, fig.height=4, message = FALSE)
data(net)
history <- SimulateExtinctions(Network = net, Method = "Mostconnected")
ExtinctionPlot(History = history)
library(NetworkExtinction)
library(NetworkExtinction)
?Mostconnected
data("net")
Mostconnected(Network = net)
library(NetworkExtinction)
SimulateExtinctions(Network = net, Order = c(2,4,7), Method = "Ordered")
library(NetworkExtinction)
SimulateExtinctions(Network = net, Order = c(2,4,7), Method = "Ordered")
SimulateExtinctions(Network = net, Method = "Mostconnected")
suppressMessages()
?suppressMessages
library(NetworkExtinction)
SimulateExtinctions(Network = net, Method = "Mostconnected")
SimulateExtinctions(Network = net, Order = c(2,4,7), Method = "Ordered")
a <- SimulateExtinctions(Network = net, Method = "Mostconnected")
a
library(NetworkExtinction)
SimulateExtinctions(Network = net, Order = c(2,4,7), Method = "Ordered")
SimulateExtinctions(Network = net, Method = "Mostconnected")
data("net")
Mostconnected(Network = net)
?NetworkExtinction::ExtinctionPlot()
library(NetworkExtinction)
data("net")
Mostconnected(Network = net)
?help"Deprecated"
?Deprecated
library(NetworkExtinction)
data("net")
Mostconnected(Network = net)
igrapj
?igraph::as.igraph()
library(network)
m <- rbinom(100, size = 1, prob = 0.1)
m
m <- rbinom(100, size = 1, prob = 0.3)
m <- matrix(rbinom(100, size = 1, prob = 0.3), ncol = 10, byrow = T)
library(tidyverse)
library(network)
library(igraph)
library(tidyverse)
set.seed(2020)
m <- matrix(rbinom(100, size = 1, prob = 0.3), ncol = 10, byrow = T) %>% as.data.frame() %>% tibble::rowid_to_column()
View(m)
library(network)
library(igraph)
library(tidyverse)
set.seed(2020)
m <- matrix(rbinom(100, size = 1, prob = 0.3), ncol = 10, byrow = T) %>% as.data.frame() %>% tibble::rowid_to_column()
Mat <- igraph::as.igraph(as.matrix(m[,-1]))
?network::as.network()
library(network)
library(igraph)
library(tidyverse)
set.seed(2020)
#Simular una base de datos como la que tiene Pame
m <- matrix(rbinom(100, size = 1, prob = 0.3), ncol = 10, byrow = T) %>% as.data.frame() %>% tibble::rowid_to_column()
## Transformar en red
Mat <- network::as.network(as.matrix(m[,-1]))
Mat
Adjacency <- as.matrix.network.adjacency(Mat)
Adjacency
library(network)
library(igraph)
library(tidyverse)
set.seed(2020)
#Simular una base de datos como la que tiene Pame
m <- matrix(rbinom(100, size = 1, prob = 0.3), ncol = 10, byrow = T) %>%
as.data.frame() %>%
tibble::rowid_to_column()
View(m)
library(network)
library(tidyverse)
set.seed(2020)
#Simular una base de datos como la que tiene Pame
m <- matrix(rbinom(100, size = 1, prob = 0.3), ncol = 10, byrow = T) %>%
as.data.frame() %>%
tibble::rowid_to_column()
## Transformar en red
Mat <- network::as.network(as.matrix(m[,-1]))
Adjacency <- as.matrix.network.adjacency(Mat)
library(network)
library(tidyverse)
set.seed(2020)
#Simular una base de datos como la que tiene Pame
m <- matrix(rbinom(100, size = 1, prob = 0.3), ncol = 10, byrow = T) %>%
as.data.frame() %>%
tibble::rowid_to_column()
## Transformar en red
Mat <- network::as.network(as.matrix(m[,-1]))
Adjacency <- network::as.matrix.network.adjacency(Mat)
library(network)
library(tidyverse)
set.seed(2020)
#Simular una base de datos como la que tiene Pame
m <- matrix(rbinom(100, size = 1, prob = 0.6), ncol = 10, byrow = T) %>%
as.data.frame() %>%
tibble::rowid_to_column()
## Transformar en red
Mat <- network::as.network(as.matrix(m[,-1]))
Adjacency <- network::as.matrix.network.adjacency(Mat)
View(Adjacency)
set.seed(2020)
m <- matrix(rpois(100, lambda = 2), ncol = 10, byrow = T) %>%
as.data.frame() %>%
tibble::rowid_to_column()
Mat <- network::as.network(as.matrix(m[,-1]))
View(m)
View(Mat)
Adjacency <- network::as.matrix.network.adjacency(Mat)
View(Adjacency)
?as.matrix.network.adjacency()
as.matrix.network.incidence(Mat)
as_adj(Mat)
as_adj(as.igraph(Mat))
?as_adj()
g <- sample_gnp(10, 2/10)
as_adjacency_matrix(g)
as_adjacency_matrix(g)
E(g)$weight <- runif(ecount(g))
as_adjacency_matrix(g, attr="weight")
g
library(NetworkExtinction)
?SimulateExtinctions
data("net")
SimulateExtinctions(Network = net, Method = "Mostconnected")
data("net")
SimulateExtinctions(Network = net, Order = c(1,2,3,4,5,6,7,8,9,10), Method = "Ordered")
library(NetworkExtinction)
?SimulateExtinctions
data("net")
SimulateExtinctions(Network = net, Method = "Mostconnected")
SimulateExtinctions(Network = net, Order = c(1,2,3,4,5,6,7,8,9,10), Method = "Ordered")
#Second Ordered example
library(NetworkExtinction)
data("net")
SimulateExtinctions(Network = net, Method = "Mostconnected")
library(NetworkExtinction)
data("net")
SimulateExtinctions(Network = net, Method = "Mostconnected")
#first Ordered example
data("net")
SimulateExtinctions(Network = net, Order = c(1,2,3,4,5,6,7,8,9,10), Method = "Ordered")
library(NetworkExtinction)
data("net")
SimulateExtinctions(Network = net, Method = "Mostconnected")
#first Ordered example
data("net")
SimulateExtinctions(Network = net, Order = c(1,2,3,4,5,6,7,8,9,10), Method = "Ordered")
#Second Ordered example
data("net")
SimulateExtinctions(Network = net, Order = c(1,2,3,4,5,6,7,8,9,10), Method = "Ordered")
#Second Ordered example
SimulateExtinctions(Network = net, Method = "Mostconnected")
Network = net
DF1 <- data.frame(Spp = rep(NA, network.size(Network)), S = rep(NA, network.size(Network)), L = rep(NA, network.size(Network)), C = rep(NA, network.size(Network)), Link_density = rep(NA, network.size(Network)),SecExt = rep(NA,network.size(Network)), Pred_release = rep(NA,network.size(Network)), Iso_nodes =rep (NA,network.size(Network)))
library(network)
DF1 <- data.frame(Spp = rep(NA, network.size(Network)), S = rep(NA, network.size(Network)), L = rep(NA, network.size(Network)), C = rep(NA, network.size(Network)), Link_density = rep(NA, network.size(Network)),SecExt = rep(NA,network.size(Network)), Pred_release = rep(NA,network.size(Network)), Iso_nodes =rep (NA,network.size(Network)))
DF2 <- data.frame(Spp = rep(NA, network.size(Network)), S = rep(NA, network.size(Network)), L = rep(NA, network.size(Network)), C = rep(NA, network.size(Network)),  SecExt = rep(NA,network.size(Network)), Pred_release = rep(NA,network.size(Network)))
colnames(DF1)
colnames(DF2)
library(NetworkExtinction)
SimulateExtinctions(Network = net, Method = "Mostconnected")
SimulateExtinctions(Network = net, Method = "Mostconnected")
SimulateExtinctions(Network = net, Method = "Mostconnected")
#first Ordered example
SimulateExtinctions(Network = net, Order = c(1,2,3,4,5,6,7,8,9,10), Method = "Ordered")
library(NetworkExtinction)
?ordinal::clmm
library(MCMCglmm)
install.packages("ordinal")
library(NetworkExtinction)
?DegreeDistribution
library(NetworkExtinction)
data("chilean_intertidal")
DegreeDistribution(chilean_intertidal)
library(NetworkExtinction)
library(NetworkExtinction)
data("chilean_intertidal")
DegreeDistribution(chilean_intertidal)
data("net")
ExtinctionOrder(Network = net, Order = c(1,2,3,4,5,6,7,8,9,10))
library(NetworkExtinction)
data("chilean_intertidal")
DegreeDistribution(chilean_intertidal)
library(NetworkExtinction)
library(NetworkExtinction)
data("chilean_intertidal")
DegreeDistribution(chilean_intertidal)
library(NetworkExtinction)
library(NetworkExtinction)
data("chilean_intertidal")
DegreeDistribution(chilean_intertidal)
library(NetworkExtinction)
library(NetworkExtinction)
data("chilean_intertidal")
DegreeDistribution(chilean_intertidal)
library(NetworkExtinction)
library(NetworkExtinction)
data("chilean_intertidal")
DegreeDistribution(chilean_intertidal)
library(NetworkExtinction)
library(NetworkExtinction)
data("chilean_intertidal")
DegreeDistribution(chilean_intertidal)
library(NetworkExtinction)
DegreeDistribution(chilean_intertidal)
library(NetworkExtinction)
DegreeDistribution(chilean_intertidal)
library(NetworkExtinction)
DegreeDistribution(chilean_intertidal)
library(NetworkExtinction)
DegreeDistribution(chilean_intertidal)
data("net")
SimulateExtinctions(Network = net, Method = "Mostconnected")
SimulateExtinctions(Network = net, Order = c(1,2,3,4,5,6,7,8,9,10), Method = "Ordered")
data("net")
class(net)
data("More_Connected")
RandomExtinctions(Network = More_Connected, nsim = 5)
data("More_Connected")
RandomExtinctions(Network = More_Connected, nsim = 10)
library(NetworkExtinction)
data("net")
class(net)
plo(net)
plot(net)
data("chilean_intertidal")
class(chilean_intertidal)
plot(chilean_intertidal)
?RandomExtinctions
data("More_Connected")
RandomExtinctions(Network = More_Connected, nsim = 20)
library(NetworkExtinction)
data("More_Connected")
RandomExtinctions(Network = More_Connected, nsim = 20)
data("More_Connected")
a <- RandomExtinctions(Network = More_Connected, nsim = 20)
cores <- ceiling(parallel::detectCores()/2)
a <- RandomExtinctions(Network = More_Connected, nsim = 20, parallel = TRUE, ncores = cores)
NumExt <- sd <- AccSecExt <- AccSecExt_95CI <- AccSecExt_mean <- Lower <- NULL
network <- Network
Network = chilean_intertidal
sims <- list()
nsims = 10
i = 1
sims[[i]] <- try(.ExtinctionOrder(Network = network, Order = sample(1:network.size(network)))$DF, silent = T)
sims[[i]]$simulation <- i
for(i in 1:nsim){
sims[[i]] <- try(.ExtinctionOrder(Network = network, Order = sample(1:network.size(network)))$DF, silent = T)
sims[[i]]$simulation <- i
message(paste("Simulation", i, "of", nsim, "ready"))
}
nsim = 20
sims <- list()
for(i in 1:nsim){
sims[[i]] <- try(.ExtinctionOrder(Network = network, Order = sample(1:network.size(network)))$DF, silent = T)
sims[[i]]$simulation <- i
message(paste("Simulation", i, "of", nsim, "ready"))
}
sims
sims <- list()
library(NetworkExtinction)
RandomExtinctions(Network = More_Connected, nsim = 20)
sims[[i]] <- try(.ExtinctionOrder(Network = network, Order = sample(1:network.size(network))), silent = T)
i = 1
sims[[i]] <- try(.ExtinctionOrder(Network = network, Order = sample(1:network.size(network))), silent = T)
sims[[i]]$simulation <- i
sims[[i]]
library(NetworkExtinction)
RandomExtinctions(Network = More_Connected, nsim = 20)
a <- RandomExtinctions(Network = More_Connected, nsim = 20)
a[[1]]
a[[1]] %>% class
a[[1]][[1]] %>% class
a$sims[[1]]
a$sims[[1]] %>% class
class(a$sims[[1]])
cond <- sapply(a$sims, function(x) class(x) == "data.frame")
cond
cond <- sapply(a$sims, function(x) class(x) %in% "data.frame")
cond
cond <- sapply(a$sims, function(x) "data.frame" %in% class(x))
cond
library(NetworkExtinction)
RandomExtinctions(Network = More_Connected, nsim = 20)
library(NetworkExtinction)
RandomExtinctions(Network = More_Connected, nsim = 20)
RandomExtinctions(Network = More_Connected, nsim = 20)
library(NetworkExtinction)
RandomExtinctions(Network = More_Connected, nsim = 20)
RandomExtinctions(Network = More_Connected, nsim = 20)
RandomExtinctions(Network = More_Connected, nsim = 20)
library(NetworkExtinction)
RandomExtinctions(Network = More_Connected, nsim = 20)
library(NetworkExtinction)
RandomExtinctions(Network = More_Connected, nsim = 20)
library(NetworkExtinction)
RandomExtinctions(Network = More_Connected, nsim = 20)
library(NetworkExtinction)
RandomExtinctions(Network = More_Connected, nsim = 20)
RandomExtinctions(Network = More_Connected, nsim = 10)
a <- RandomExtinctions(Network = More_Connected, nsim = 10)
a
library(NetworkExtinction)
a <- RandomExtinctions(Network = More_Connected, nsim = 10)
a[[1]]
a
library(NetworkExtinction)
a
a <- RandomExtinctions(Network = More_Connected, nsim = 10)
a
a[[1]]
a[[2]]
a[[3]]
a[[4]]
a[[5]]
a %>% mutate(simulation = 20)
library(dplyr)
a %>% mutate(simulation = 20)
a[[1]] %>% mutate(simulation = 20)
a[[2]] %>% mutate(simulation = 20)
a[[2]]
a[[2]] %>% class
a[[2]]
a[[2]] %>% mutate(simulation = 20)
mutate()
a[[2]]
a[[2]] %>% class
library(NetworkExtinction)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
warning = FALSE
)
knitr::opts_chunk$set(fig.width=6, fig.height=4, message = FALSE)
library(NetworkExtinction)
a<- matrix(c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0),nrow=10, ncol=10)
a
library(network)
net <- as.network(a, loops = TRUE)
net
library(NetworkExtinction)
data("net")
Mostconnected(Network = net)
?SimulateExtinctions
library(NetworkExtinction)
data("net")
SimulateExtinctions(Network = net, Method = "Mostconnected")
library(NetworkExtinction)
data("net")
knitr::kable(SimulateExtinctions(Network = net, Method = "Mostconnected"), caption = "Table 1: The resulting dataframe of the SimulateExtinctions in Mostconnected method")
data("net")
history <- SimulateExtinctions(Network = net, Method = "Mostconnected")
ExtinctionPlot(History = history, Variable = "AccSecExt")
data("net")
SimulateExtinctions(Network = net, Order = c(2,4,7), Method = "Ordered")
data("net")
knitr::kable(SimulateExtinctions(Network = net, Order = c(2,4,7), Method = "Ordered"), caption = "Table 2: The resulting dataframe of the ExtinctionOrder function")
data("net")
Order <- SimulateExtinctions(Network = net, Order = c(2,4,7), Method = "Ordered")
data(net)
set.seed(707)
RandomExtinctions(Network= net, nsim= 100)
data(net)
set.seed(707)
Test <- RandomExtinctions(Network= net, nsim= 100)
knitr::kable(Test, caption = "Table 3: The resulting dataframe of the RandomExtinctions function")
?RandomExtinctions
data(net)
set.seed(707)
RandomExtinctions(Network= net, nsim= 100, plot = T)
#Test$graph
data(net)
set.seed(707)
Test <- RandomExtinctions(Network= net, nsim= 100, plot = T)
Test$graph
data("net")
History <- SimulateExtinctions(Network = net, #Order = c(1,2,3,4,5,6,7,8,9,10),
Method = "Mostconnected")
NullHyp <- RandomExtinctions(Network = net, nsim = 100)
Comparison <- CompareExtinctions(Nullmodel = NullHyp, Hypothesis = History)
Comparison
data("net")
History <- SimulateExtinctions(Network = net, Order = c(1,2,3,4,5,6,7,8,9,10), Method = "Ordered")
NullHyp <- RandomExtinctions(Network = net, nsim = 100)
Comparison <- CompareExtinctions(Nullmodel = NullHyp, Hypothesis = History)
Comparison
data("net")
History <- SimulateExtinctions(Network = net, Order = c(1,2,3,4,5,6,7,8,9,10), Method = "Ordered")
History
NullHyp <- RandomExtinctions(Network = net, nsim = 100)
CompareExtinctions(Nullmodel = NullHyp, Hypothesis = History)
class(History)
library(NetworkExtinction)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
warning = FALSE
)
knitr::opts_chunk$set(fig.width=6, fig.height=4, message = FALSE)
data("net")
History <- SimulateExtinctions(Network = net, Order = c(1,2,3,4,5,6,7,8,9,10), Method = "Ordered")
NullHyp <- RandomExtinctions(Network = net, nsim = 100)
Comparison <- CompareExtinctions(Nullmodel = NullHyp, Hypothesis = History)
Comparison
Comparison <- CompareExtinctions(Nullmodel = NullHyp, Hypothesis = History)
data("net")
History <- SimulateExtinctions(Network = net, Order = c(1,2,3,4,5,6,7,8,9,10), Method = "Ordered")
NullHyp <- RandomExtinctions(Network = net, nsim = 100, plot = T)
Comparison <- CompareExtinctions(Nullmodel = NullHyp, Hypothesis = History)
Comparison
library(NetworkExtinction)
?Deprecated
?SimulateExtinctions
library(NetworkExtinction)
library(NetworkExtinction)
library(NetworkExtinction)
library(NetworkExtinction)
devtools::install_github("r-lib/usethis")
plot(1:1e3, 1-pexp(1:1e3, rate = 1))
plot(1:1e3, 1-pexp(1:1e3, rate = 100))
plot(1:1e3, 1-pexp(1:1e3, rate = 0.0001))
plot(1:1e3, 1-pexp(1:1e3, rate = 0.001))
plot(1:1e3, 1-pexp(1:1e3, rate = 0.01))
