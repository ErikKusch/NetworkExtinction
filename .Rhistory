ss
ss$root
# first solution
ss <- multiroot(f = model, start = c(10, 10, 10))
ss
# first solution
ss <- multiroot(f = model, start = c(100, 100, 100))
ss
# first solution
ss <- multiroot(f = model, start = c(-2, -100, 100))
# first solution
ss <- multiroot(f = model, start = c(-2, 0, 100))
ss
# first solution
ss <- multiroot(f = model, start = c(100, 100, 100))
ss
library(rootSolve)
#one diff equation
fun <- function (x) cos(2*x)^3
curve(fun(x), 0, 8)
abline(h = 0, lty = 3)
All <- uniroot.all(fun, c(0, 8))
All
curve(fun(x), -2, 10)
abline(h = 0, lty = 3)
All <- uniroot.all(fun, c(-2, 10))
points(All, y = rep(0, length(All)), pch = 16, cex = 2)
All
model <- function(x) {
F1 <- x[1]   + x[2]   + x[3]^2 -12
F2 <- x[1]^2 - x[2]   + x[3] -2
F3 <- 2*x[1] - x[2]^2 + x[3] -1
c(F1 = F1, F2 = F2, F3 = F3)
}
# first solution
ss <- multiroot(f = model, start = c(1, 1, 1))
ss
library(NetworkExtinction)
a <- Mostconnected(Network = net)
b <- RandomExtinctions(Network = net, nsim = 1000)
View(a)
b$sims
View(a)
View(b$sims)
chisq.test(x = a$AccSecondaryExtinction, y = b$sims$AccSecondaryExtinction)
chisq.test(x = a$AccSecondaryExtinction, y = b$sims$AccSecondaryExtinction[1:length(a$AccSecondaryExtinction)])
b$graph
g <- b$graph
g + geom_line(data = a)
library(ggplot2)
g + geom_line(data = a)
g + geom_line(data = a, lty = 2)
g + geom_point(data = a) + geom_line(data = a, lty = 2)
b
library(NetworkExtinction)
library(NetworkExtinction)
data("net")
History <- Mostconnected(Network = net)
NullHyp <- RandomExtinctions(Network = net, nsim = 100)
CompareExtinctions(Nullmodel = NullHyp, Hypothesis = NullHyp)
data("net")
History <- Mostconnected(Network = net)
NullHyp <- RandomExtinctions(Network = net, nsim = 100)
CompareExtinctions(Nullmodel = NullHyp, Hypothesis = History)
data("net")
History <- Mostconnected(Network = net)
NullHyp <- RandomExtinctions(Network = net, nsim = 100)
CompareExtinctions(Nullmodel = NullHyp, Hypothesis = History)
library(NetworkExtinction)
library(NetworkExtinction)
library(NetworkExtinction)
library(NetworkExtinction)
library(NetworkExtinction)
data("net")
History <- Mostconnected(Network = net)
NullHyp <- RandomExtinctions(Network = net, nsim = 100)
CompareExtinctions(Nullmodel = NullHyp, Hypothesis = History)
data("net")
History <- ExtinctionOrder(Network = net, Order = c(1,2,3,4,5,6,7,8,9,10))
NullHyp <- RandomExtinctions(Network = net, nsim = 100)
CompareExtinctions(Nullmodel = NullHyp, Hypothesis = History)
?class
data("net")
History <- Mostconnected(Network = net)
NullHyp <- RandomExtinctions(Network = net, nsim = 100)
CompareExtinctions(Nullmodel = NullHyp, Hypothesis = History)
class(History)
class(NullHyp)
library(NetworkExtinction)
data("net")
History <- Mostconnected(Network = net)
NullHyp <- RandomExtinctions(Network = net, nsim = 100)
CompareExtinctions(Nullmodel = NullHyp, Hypothesis = History)
class(NullHyp)
class(History)
class(History) == "Mostconnected"
data("net")
History <- Mostconnected(Network = net)
class(History)[2] == "Mostconnected"
library(NetworkExtinction)
data("net")
History <- Mostconnected(Network = net)
NullHyp <- RandomExtinctions(Network = net, nsim = 100)
CompareExtinctions(Nullmodel = NullHyp, Hypothesis = History)
data("net")
History <- ExtinctionOrder(Network = net, Order = c(1,2,3,4,5,6,7,8,9,10))
NullHyp <- RandomExtinctions(Network = net, nsim = 100)
CompareExtinctions(Nullmodel = NullHyp, Hypothesis = History)
data("net")
ExtinctionOrder(Network = net, Order = c(1,2,3,4,5,6,7,8,9,10))
data("net")
a <- ExtinctionOrder(Network = net, Order = c(1,2,3,4,5,6,7,8,9,10))
a$DF
library(NetworkExtinction)
library(NetworkExtinction)
data("net")
History <- ExtinctionOrder(Network = net, Order = c(1,2,3,4,5,6,7,8,9,10))
NullHyp <- RandomExtinctions(Network = net, nsim = 100)
CompareExtinctions(Nullmodel = NullHyp, Hypothesis = History)
?chisq.test
data("net")
History <- ExtinctionOrder(Network = net, Order = c(1,2,3,4,5,6,7,8,9,10))
NullHyp <- RandomExtinctions(Network = net, nsim = 100)
CompareExtinctions(Nullmodel = NullHyp, Hypothesis = History)
data("net")
History <- ExtinctionOrder(Network = net, Order = c(1,2,3,4,5,6,7,8,9,10))
NullHyp <- RandomExtinctions(Network = net, nsim = 1000)
CompareExtinctions(Nullmodel = NullHyp, Hypothesis = History)
a <- CompareExtinctions(Nullmodel = NullHyp, Hypothesis = History)
a$graph
g <- a$graph
g + scale_linetype_manual(values = c("1, 2"), label = c("Expected", "Observed"))
data("net")
History <- Mostconnected(Network = net)
NullHyp <- RandomExtinctions(Network = net, nsim = 100)
Comparison <- CompareExtinctions(Nullmodel = NullHyp, Hypothesis = History)
Comparison$graph
Comparison$Test
Comparison$Test$p.value
round(Comparison$Test$p.value, 2)
library(NetworkExtinction)
library(NetworkExtinction)
data("net")
History <- Mostconnected(Network = net)
NullHyp <- RandomExtinctions(Network = net, nsim = 1000)
CompareExtinctions(Nullmodel = NullHyp, Hypothesis = History)
library(NetworkExtinction)
library(NetworkExtinction)
library(NetworkExtinction)
library(NetworkExtinction)
<<<<<<< HEAD
=======
library(NetworkExtinction)
vignette("NetworkExtinction")
chilean_intertidal <- readRDS("/home/derek/Documents/Walpeup/chilean_intertidal.rds")
devtools::use_data(chilean_intertidal)
chilean_intertidal
chilean_intertidal$oel
library(NetworkExtinction)
library(NetworkExtinction)
library(NetworkExtinction)
devtools::install_github("ProjectMOSAIC/mosaic")
library(broom)
?lm
?broom::augment()
mod <- lm(mpg ~ wt + qsec, data = mtcars)
tidy(mod)
glance(mod)
mod <- lm(mpg ~ wt + qsec, data = mtcars)
tidy(mod)
augment(mod)
broom::confint_tidy(mod)
?anova
?aov
op <- options(contrasts = c("contr.helmert", "contr.poly"))
( npk.aov <- aov(yield ~ block + N*P*K, npk) )
summary(npk.aov)
coefficients(npk.aov)
augment(npk.aov)
View(augment(npk.aov))
op <- options(contrasts = c("contr.helmert", "contr.poly"))
( npk.aov <- aov(yield ~ block + N*P*K, npk) )
summary(npk.aov)
coefficients(npk.aov)
op <- options(contrasts = c("contr.helmert", "contr.poly"))
( npk.aov <- aov(yield ~ block, npk) )
summary(npk.aov)
coefficients(npk.aov)
View(augment(npk.aov))
?t.test
View(augment(t.test(1:10, y = c(7:20)))
)
augment(t.test(1:10, y = c(7:20)))
t.test(1:10, y = c(7:20))
t.test(extra ~ group, data = sleep)
tidy(t.test(extra ~ group, data = sleep))
glance(t.test(extra ~ group, data = sleep))
augment(t.test(extra ~ group, data = sleep))
citation("network")
matrix(c(0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), nrow=10, ncol=10)
a<- matrix(c(0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), nrow=10, ncol=10)
a
a<- t(a)
a
dput(a)
b <- matrix(c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0,
0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0), nrow=10, ncol=10)
identical(a, b)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
knitr::opts_chunk$set(fig.width=6, fig.height=4)
library(NetworkExtinction)
data("net")
Mostconnected(Network = net)
library(NetworkExtinction)
data("net")
knitr::kable(Mostconnected(Network = net), caption = "Table 1: The resulting dataframe of the Mostconnected function")
data("net")
ExtinctionOrder(Network = net, Order = c(2,4,7))
data("net")
ExtinctionOrder(Network = net, Order = c(2,4,7))
library(NetworkExtinction)
library(NetworkExtinction)
data(net)
RandomExtinctions(Network= net, nsim= 50)
library(broom)
View(mtcars)
View(iris)
aov(lm(Petal.Length ~ Species))
aov(lm(Petal.Length ~ Species, data = iris))
tidy(aov(lm(Petal.Length ~ Species, data = iris)))
glance(aov(lm(Petal.Length ~ Species, data = iris)))
augment(aov(lm(Petal.Length ~ Species, data = iris)))
View(augment(aov(lm(Petal.Length ~ Species, data = iris))))
augment(aov(lm(Petal.Length ~ Species, data = iris)))$.resid
hist(augment(aov(lm(Petal.Length ~ Species, data = iris)))$.resid)
shiny::runApp('Hist')
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
knitr::opts_chunk$set(fig.width=6, fig.height=4, message = FALSE)
data("chilean_intertidal")
Dist <- degree_distribution(chilean_intertidal, name = "Test")
library(NetworkExtinction)
data("chilean_intertidal")
Dist <- degree_distribution(chilean_intertidal, name = "Test")
Dist$models
data("net")
History <- ExtinctionOrder(Network = net, Order = c(1,2,3,4,5,6,7,8,9,10))
set.seed(2)
NullHyp <- RandomExtinctions(Network = net, nsim = 100)
Comparison <- CompareExtinctions(Nullmodel = NullHyp, Hypothesis = History)
Comparison$Test
tidy(Comparison$Test)
augment(Comparison$Test)
tidy(Comparison$Test)
glance(Comparison$Test)
library(NetworkExtinction)
library(NetworkExtinction)
data("net")
History <- ExtinctionOrder(Network = net, Order = c(1,2,3,4,5,6,7,8,9,10))
set.seed(2)
NullHyp <- RandomExtinctions(Network = net, nsim = 100)
Comparison <- CompareExtinctions(Nullmodel = NullHyp, Hypothesis = History)
library(NetworkExtinction)
data("net")
History <- ExtinctionOrder(Network = net, Order = c(1,2,3,4,5,6,7,8,9,10))
set.seed(2)
NullHyp <- RandomExtinctions(Network = net, nsim = 100)
Comparison <- CompareExtinctions(Nullmodel = NullHyp, Hypothesis = History)
Comparison$Test
library(NetworkExtinction)
data("net")
History <- ExtinctionOrder(Network = net, Order = c(1,2,3,4,5,6,7,8,9,10))
set.seed(2)
NullHyp <- RandomExtinctions(Network = net, nsim = 100)
Comparison <- CompareExtinctions(Nullmodel = NullHyp, Hypothesis = History)
Comparison$Test
data("chilean_intertidal")
History <- Mostconnected(Network = chilean_intertidal)
set.seed(2)
NullHyp <- RandomExtinctions(Network = chilean_intertidal, nsim = 100)
Comparison <- CompareExtinctions(Nullmodel = NullHyp, Hypothesis = History)
data("chilean_intertidal")
History <- Mostconnected(Network = chilean_intertidal)
set.seed(2)
NullHyp <- RandomExtinctions(Network = chilean_intertidal, nsim = 80)
Comparison <- CompareExtinctions(Nullmodel = NullHyp, Hypothesis = History)
data("chilean_intertidal")
History <- Mostconnected(Network = chilean_intertidal)
set.seed(2)
NullHyp <- RandomExtinctions(Network = chilean_intertidal, nsim = 20)
Comparison <- CompareExtinctions(Nullmodel = NullHyp, Hypothesis = History)
Comparison
data("chilean_intertidal")
History <- Mostconnected(Network = chilean_intertidal)
set.seed(2)
NullHyp <- RandomExtinctions(Network = chilean_intertidal, nsim = 40)
Comparison <- CompareExtinctions(Nullmodel = NullHyp, Hypothesis = History)
Comparison
Comparison$Test
Comparison$Test$p.value
library(NetworkExtinction)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
knitr::opts_chunk$set(fig.width=6, fig.height=4, message = FALSE)
data("net")
History <- ExtinctionOrder(Network = net, Order = c(1,2,3,4,5,6,7,8,9,10))
set.seed(2)
NullHyp <- RandomExtinctions(Network = net, nsim = 100)
Comparison <- CompareExtinctions(Nullmodel = NullHyp, Hypothesis = History)
Comparison$graph
Comparison$Test
library(rgbif)
install.packages("rgbif")
?rgbif::occ_data()
a <- rgbif::occ_data("Pudu pudu")
a <- rgbif::occ_data(scientificName = "Pudu pudu")
a
a$data
a$meta
a <- rgbif::occ_data(scientificName = "Pudu pudu", limit = 400)
a$data
a <- rgbif::occ_data(scientificName = "Puma concolor", limit = 400)
a$data
View(a$data)
library(NetworkExtinction)
library(NetworkExtinction)
library(NetworkExtinction)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
knitr::opts_chunk$set(fig.width=6, fig.height=4, message = FALSE)
data("net")
History <- ExtinctionOrder(Network = net, Order = c(1,2,3,4,5,6,7,8,9,10))
set.seed(2)
NullHyp <- RandomExtinctions(Network = net, nsim = 100)
Comparison <- CompareExtinctions(Nullmodel = NullHyp, Hypothesis = History)
Comparison$graph
Comparison$Test
data(net)
set.seed(123)
Test <- RandomExtinctions(Network= net, nsim= 50)
knitr::kable(Test$sims, caption = "Table 3: The resulting dataframe of the RandomExtinctions function")
data(net)
set.seed(123)
Test$graph
Comparison$graph
data(net)
history <- Mostconnected(Network = net)
ExtinctionPlot(History = history)
ExtinctionPlot(History = history, Variable = "LinksPerSpecies")
require("rgdal")
require("rgeos")
require("dplyr")
library(NetworkExtinction)
?devtools::build_win()
devtools::build_win()
?devtools::check_cran()
devtools::check_cran()
devtools::check_cran("NetworkExtinction")
devtools::build_win()
library(NetworkExtinction)
devtools::build_win()
devtools::build_win()
library(NetworkExtinction)
library(NetworkExtinction)
devtools::build_win()
# cargamos librerias
if (!require("pacman")) install.packages("pacman")
pacman::p_load(rgbif, leaflet, rgdal, dismo, raster, sp, ggplot2, tidyverse)
## creamos un spatial point dataframe con el punto donde se encuentra Walpeup
Walpeup <- cbind(142.025,-35.136111)
species <- data.frame(species = "Elanus axillaris")
Walpeup <- SpatialPointsDataFrame(Walpeup, species, proj4string=CRS("+proj=longlat +datum=WGS84"))
#Generamos un poligono circular de radio d (en metros) alrededor de walpeup
Radio <- polygons(circles(Walpeup, d = 100000, lonlat = TRUE))
DF <- fortify(Radio)
DF <- fortify(Radio)
Radio
plot(Radio)
DF <- fortify(Radio)
View(DF)
Elanus_DB <- Elanus_pres %>% select(name, decimalLatitude, decimalLongitude, year, month, day)
Elanus_pres <- occ_data(scientificName = "Elanus axillaris", country = "AU", hasCoordinate = TRUE, year='1983,2004', limit = 200000, decimalLatitude=paste(range(DF$lat), collapse = ","), decimalLongitude = paste(range(DF$long), collapse = ","))
Elanus_pres <- Elanus_pres$data
Elanus_DB <- Elanus_pres %>% select(name, decimalLatitude, decimalLongitude, year, month, day)
Elanus_DB
View(Elanus_DB)
Elanus_points <- SpatialPointsDataFrame(Elanus_DB[,c(3,2)], Elanus_DB[,-c(3,2)], proj4string=CRS("+proj=longlat +datum=WGS84"))
points(Elanus_points)
Elanus_points <- Elanus_points[Radio,]
plot(Radio)
points(Elanus_points)
Elanus_DB <- as.data.frame(Elanus_points)
leaflet() %>% addTiles() %>% addPolygons(data = Radio , fill = TRUE, group = "Elanus axilaris", color = "red", label = "Elanus axilaris", popup = "Viña") %>%  addCircleMarkers(data =Elanus_DB , ~decimalLongitude, ~decimalLatitude, popup = ~as.character(year), label = ~as.character(year))
Elanus_Abundance <- Elanus_DB %>% group_by(year) %>% summarize(abundance = n())
ggplot(Elanus_Abundance, aes(x = year, y = abundance)) + geom_line() + geom_point()
ggplot(Elanus_Abundance, aes(x = year, y = abundance)) + geom_line() + geom_point() + theme_classic()
library(NetworkExtinction)
data("chilean_intertidal")
degree_distribution(chilean_intertidal, "test")
degree_distribution(chilean_intertidal, "test", scale = "LogLog")
degree_distribution(chilean_intertidal, "test")
degree_distribution(chilean_intertidal, "test", scale = "LogLog")
>>>>>>> 1a14055c7c64e8540f90ae268352bb7094251f95
set.seed(2019)
B <- rnorm(2000)
shapiro.test(B)
ks.test(x=B,y='pnorm',alternative='two.sided')
ks.test(x=B,y='pnorm',alternative='two.sided')
ks.test(x=B,y='pnorm',alternative='two.sided')
ks.test(x=B,y='pnorm',alternative='two.sided')
ks.test(x=B,y='pnorm',alternative='two.sided')$p.value
ks.test(x=B,y='pnorm',alternative='two.sided')$p.value
library(NetworkExtinction)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
knitr::opts_chunk$set(fig.width=6, fig.height=4, message = FALSE)
library(NetworkExtinction)
a<- matrix(c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0),nrow=10, ncol=10)
a
library(network)
net <- as.network(a, loops = TRUE)
net
library(NetworkExtinction)
data("net")
Mostconnected(Network = net)
library(NetworkExtinction)
data("net")
knitr::kable(Mostconnected(Network = net), caption = "Table 1: The resulting dataframe of the Mostconnected function")
data("net")
history <- Mostconnected(Network = net)
ExtinctionPlot(History = history, Variable = "AccSecondaryExtinction")
data("net")
ExtinctionOrder(Network = net, Order = c(2,4,7))
data("net")
knitr::kable(ExtinctionOrder(Network = net, Order = c(2,4,7))$DF, caption = "Table 2: The resulting dataframe of the ExtinctionOrder function")
data("net")
ExtinctionOrder(Network = net, Order = c(2,4,7))$Graph
data(net)
RandomExtinctions(Network= net, nsim= 50)
data(net)
set.seed(123)
Test <- RandomExtinctions(Network= net, nsim= 50)
knitr::kable(Test$sims, caption = "Table 3: The resulting dataframe of the RandomExtinctions function")
data(net)
set.seed(123)
Test$graph
data("net")
History <- ExtinctionOrder(Network = net, Order = c(1,2,3,4,5,6,7,8,9,10))
set.seed(2)
NullHyp <- RandomExtinctions(Network = net, nsim = 100)
Comparison <- CompareExtinctions(Nullmodel = NullHyp, Hypothesis = History)
Comparison$graph
Comparison$Test
data(net)
history <- Mostconnected(Network = net)
ExtinctionPlot(History = history)
ExtinctionPlot(History = history, Variable = "LinksPerSpecies")
data("chilean_intertidal")
degree_distribution(chilean_intertidal, name = "Test")
library(NetworkExtinction)
install.packages("pkgdown")
usethis::use_pkgdown()
pkgdown::build_site()
pkgdown::build_site()
install.packages(c("classInt", "covr", "keras", "later", "pkgbuild", "promises", "rlang", "shiny", "units"))
install.packages(c("classInt", "covr", "keras", "later", "pkgbuild", "promises", "rlang", "shiny", "units"))
pkgdown::build_site()
pkgdown::build_site(new_process = FALSE)
pkgdown::build_site(new_process = FALSE)
pkgdown::deploy_site_github()
use_github_links()
??use_github_links
usethis::use_github_links()
require(devtools)
use_readme_rmd()
use_news_md()
use_readme_rmd()
use_news_md()
use_vignette("NetworkExtinction")
use_github_links()
?use_github_links()
?use_travis
library(NetworkExtinction)
library(NetworkExtinction)
data("net")
Mostconnected(Network = net)
library(NetworkExtinction)
data("net")
Mostconnected(Network = net)
library(NetworkExtinction)
library(NetworkExtinction)
library(NetworkExtinction)
library(NetworkExtinction)
library(NetworkExtinction)
pkgdown::build_site(devel = T)
?pkgdown::build_site
library(NetworkExtinction)
library(NetworkExtinction)
